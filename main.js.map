{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication/auth.service.ts","webpack:///./src/app/authentication/authentication-routing.module.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.scss","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/signup/signup.component.html","webpack:///./src/app/authentication/signup/signup.component.scss","webpack:///./src/app/authentication/signup/signup.component.ts","webpack:///./src/app/books/book-list/book-list.component.html","webpack:///./src/app/books/book-list/book-list.component.scss","webpack:///./src/app/books/book-list/book-list.component.ts","webpack:///./src/app/books/books-routing.module.ts","webpack:///./src/app/books/books.module.ts","webpack:///./src/app/browser.service.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/validators/match-validator.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'intelligentfinancial-test-roksanaaghajanpoor';\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { BooksModule } from './books/books.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AuthenticationModule,\n    BooksModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { LoginResponse } from './dto/login.dto';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from \"rxjs/operators\";\nimport { Observable } from 'rxjs';\nimport { BrowserService } from '../browser.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl: string = 'https://api.tsetab.com/api';\n  constructor(\n    private http: HttpClient,\n    private browserService: BrowserService) { }\n\n  private buildApiUrl(url: string) {\n    return this.baseUrl + url;\n  }\n\n  login(request): Observable<any> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    return this.http.post(this.buildApiUrl('/Users/Authenticate'),\n      request, { headers: headers })\n      .pipe(\n        map((response: LoginResponse) => {\n          this.browserService.setSession('userToken', response)\n          return response;\n        })\n      );\n  }\n\n  signup(request): Observable<any> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    return this.http.post(this.buildApiUrl('/Users/Register'),\n      request, { headers: headers })\n      .pipe(\n        map((response) => {\n          return response;\n        })\n      );\n  }\n\n  getBooksList(): Observable<any> {\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Bearer ' + this.browserService.getSession('userToken').token\n    })\n    return this.http.get(this.buildApiUrl('/books/EmployeeList'), { headers: headers });\n  }\n}\n\n","import { SignupComponent } from './signup/signup.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { MatCardModule, MatInputModule, MatButtonModule } from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n  ]\n})\nexport class AuthenticationModule { }\n","module.exports = \"<mat-card>\\n  <mat-card-title>ورود</mat-card-title>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"loginFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"نام کاربری\\\" formControlName=\\\"Username\\\">\\n          <mat-error\\n            *ngIf=\\\"loginFormGroup.get('Username').hasError('required')&&loginFormGroup.get('Username').errors['required']\\\">\\n            نام کاربری را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"password\\\" matInput placeholder=\\\"رمزعبور\\\" formControlName=\\\"Password\\\">\\n          <mat-error\\n            *ngIf=\\\"loginFormGroup.get('Password').hasError('required')&&loginFormGroup.get('Password').errors['required']\\\">\\n            رمزعبور را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <div class=\\\"button\\\">\\n        <button type=\\\"submit\\\" mat-button>ورود</button>\\n      </div>\\n\\n    </form>\\n  </mat-card-content>\\n  <button  mat-button type=\\\"submit\\\" class=\\\"back-button\\\" routerLink=\\\"/signup\\\">ثبت نام</button>\\n</mat-card>\"","module.exports = \":host {\\n  display: flex;\\n  justify-content: center;\\n  margin: 100px 0px; }\\n\\n.mat-form-field {\\n  width: 100%;\\n  min-width: 300px;\\n  text-align: right; }\\n\\nmat-card-title,\\nmat-card-content {\\n  display: flex;\\n  justify-content: center; }\\n\\n.error {\\n  padding: 16px;\\n  width: 300px;\\n  color: white;\\n  background-color: red; }\\n\\n.button {\\n  display: flex;\\n  justify-content: flex-end; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vRTpcXHdvcmtTcGFjZVxcaW50ZWxsaWdlbnRmaW5hbmNpYWwtdGVzdC1yb2tzYW5hYWdoYWphbnBvb3Ivc3JjXFxhcHBcXGF1dGhlbnRpY2F0aW9uXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7O0FBR25COztFQUVFLGFBQWE7RUFDYix1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLFlBQVk7RUFDWixxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxhQUFhO0VBQ2IseUJBQXlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMTAwcHggMHB4O1xyXG4gIH1cclxuXHJcbiAgLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLXdpZHRoOiAzMDBweDtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIH1cclxuXHJcbiAgbWF0LWNhcmQtdGl0bGUsXHJcbiAgbWF0LWNhcmQtY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuZXJyb3Ige1xyXG4gICAgcGFkZGluZzogMTZweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICB9XHJcblxyXG4gIC5idXR0b24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgfVxyXG4iXX0= */\"","import { LoginResponse } from './../dto/login.dto';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginFormGroup: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initialLoginForm();\n  }\n\n  initialLoginForm() {\n    this.loginFormGroup = this.formBuilder.group({\n      Username: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.loginFormGroup.getRawValue())\n      .subscribe((response: LoginResponse) => {\n        this.router.navigate(['/bookList']);\n      }, (httpErrorResponse: HttpErrorResponse) => {\n        console.log(httpErrorResponse);\n      }\n      );\n  }\n}\n","module.exports = \"<mat-card>\\n  <mat-card-title>ثبت نام</mat-card-title>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"signupFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"کد ملی\\\" formControlName=\\\"NationalCode\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('NationalCode').hasError('required')&&signupFormGroup.get('NationalCode').errors['required']\\\">\\n            کد ملی را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"شماره موبایل\\\" formControlName=\\\"MobileNumber\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('MobileNumber').hasError('required')&&signupFormGroup.get('MobileNumber').errors['required']\\\">\\n            شماره موبایل را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"نام\\\" formControlName=\\\"FirstName\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('FirstName').hasError('required')&&signupFormGroup.get('FirstName').errors['required']\\\">\\n            نام را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"نام خانوادگی\\\" formControlName=\\\"LastName\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('LastName').hasError('required')&&signupFormGroup.get('LastName').errors['required']\\\">\\n            نام خانوادگی را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"password\\\" matInput placeholder=\\\"رمزعبور\\\" formControlName=\\\"Password\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('Password').hasError('required')&&signupFormGroup.get('Password').errors['required']\\\">\\n            رمزعبور را وارد کنید\\n          </mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-form-field>\\n          <input type=\\\"password\\\" matInput placeholder=\\\"تکرار رمزعبور\\\" formControlName=\\\"ConfirmPassword\\\">\\n          <mat-error\\n            *ngIf=\\\"signupFormGroup.get('ConfirmPassword').hasError('required')&&signupFormGroup.get('ConfirmPassword').errors['required']\\\">\\n            تکرار رمزعبور را وارد کنید\\n          </mat-error>\\n          <mat-error *ngIf=\\\"signupFormGroup.get('ConfirmPassword').hasError('MatchFields')&&signupFormGroup.get('ConfirmPassword').errors['MatchFields']\\\">\\n              رمزعبور با تکرارش مطابقت ندارد\\n            </mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <div class=\\\"button\\\">\\n        <button type=\\\"submit\\\" mat-button>ثبت نام</button>\\n      </div>\\n\\n    </form>\\n  </mat-card-content>\\n  <button  mat-button type=\\\"submit\\\" class=\\\"back-button\\\" routerLink=\\\"/login\\\">ورود</button>\\n</mat-card>\"","module.exports = \":host {\\n  display: flex;\\n  justify-content: center;\\n  margin: 100px 0px; }\\n\\n.mat-form-field {\\n  width: 100%;\\n  min-width: 300px;\\n  text-align: right; }\\n\\nmat-card-title,\\nmat-card-content {\\n  display: flex;\\n  justify-content: center; }\\n\\n.error {\\n  padding: 16px;\\n  width: 300px;\\n  color: white;\\n  background-color: red; }\\n\\n.button {\\n  display: flex;\\n  justify-content: flex-end; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vc2lnbnVwL0U6XFx3b3JrU3BhY2VcXGludGVsbGlnZW50ZmluYW5jaWFsLXRlc3Qtcm9rc2FuYWFnaGFqYW5wb29yL3NyY1xcYXBwXFxhdXRoZW50aWNhdGlvblxcc2lnbnVwXFxzaWdudXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7O0FBR25COztFQUVFLGFBQWE7RUFDYix1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLFlBQVk7RUFDWixxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxhQUFhO0VBQ2IseUJBQXlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxMDBweCAwcHg7XHJcbiAgfVxyXG5cclxuICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG5cclxuICBtYXQtY2FyZC10aXRsZSxcclxuICBtYXQtY2FyZC1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5lcnJvciB7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gIH1cclxuXHJcbiAgLmJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9XHJcbiJdfQ== */\"","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatchValidator } from 'src/validators/match-validator';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupFormGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.initialLoginForm();\n  }\n\n  initialLoginForm() {\n    this.signupFormGroup = this.formBuilder.group({\n      NationalCode: ['', Validators.required],\n      MobileNumber: ['', Validators.required],\n      FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Password: ['', Validators.required],\n      ConfirmPassword: ['', Validators.required]\n    },\n    { validator: MatchValidator.Match('Password', 'ConfirmPassword') });\n  }\n\n  onSubmit() {\n    if (this.signupFormGroup.valid) {\n      this.authService.signup(this.signupFormGroup.getRawValue())\n      .subscribe((response) => {\n        console.log(response);\n        this.router.navigate(['/login']);\n      }, (httpErrorResponse: HttpErrorResponse) => {\n        console.log(httpErrorResponse);\n      });\n    } \n  }\n}\n","module.exports = \"<div class=\\\"example-header\\\">\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"جستجو\\\">\\n    </mat-form-field>\\n  </div>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n  \\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n      <ng-container matColumnDef=\\\"ID\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ردیف </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.BusinessEntityID}} </mat-cell>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"BirthDate\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> تاریخ تولد </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.BirthDate}} </mat-cell>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"JobTitle\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> شغل </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.JobTitle}} </mat-cell>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"HireDate\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> تاریخ استخدام </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.HireDate}} </mat-cell>\\n      </ng-container>\\n  \\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  \\n  \\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n  text-align: right; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va3MvYm9vay1saXN0L0U6XFx3b3JrU3BhY2VcXGludGVsbGlnZW50ZmluYW5jaWFsLXRlc3Qtcm9rc2FuYWFnaGFqYW5wb29yL3NyY1xcYXBwXFxib29rc1xcYm9vay1saXN0XFxib29rLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGNBQWM7RUFDZCxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2Jvb2stbGlzdC9ib29rLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1oZWFkZXIge1xyXG4gICAgbWluLWhlaWdodDogNjRweDtcclxuICAgIHBhZGRpbmc6IDhweCAyNHB4IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIH1cclxuICBcclxuICAubWF0LXRhYmxlIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { AuthService } from 'src/app/authentication/auth.service';\nimport { IbookData } from '../book-data.interface';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit {\n\n  displayedColumns = ['ID', 'BirthDate', 'JobTitle', 'HireDate'];\n  dataSource: MatTableDataSource<IbookData>;\n  users: IbookData[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.getBooksList();\n  }\n\n  getBooksList(): void {\n    this.authService.getBooksList().subscribe((response) => {\n      this.users = response;\n      this.dataSource = new MatTableDataSource(this.users);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookListComponent } from './book-list/book-list.component';\n\nconst routes: Routes = [\n  { path: 'bookList', component: BookListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BooksRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BooksRoutingModule } from './books-routing.module';\nimport { BookListComponent } from './book-list/book-list.component';\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatTableModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [BookListComponent],\n  imports: [\n    CommonModule,\n    BooksRoutingModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n  ]\n})\nexport class BooksModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserService {\n\n  constructor() { }\n\n  setSession(key: string, value: any): void {\n    const data = value === undefined ? \"\" : JSON.stringify(value);\n    window.sessionStorage.setItem(key, data);\n  }\n\n  getSession(key: string): any {\n    const data = window.sessionStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return null;\n    }\n  }\n}\n","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport class MatchValidator {\r\n    static Match(firstControlName, secondControlName): (AC: AbstractControl) => any {\r\n      return (abstractControl: AbstractControl) => {\r\n        let firstControlValue = abstractControl.get(firstControlName).value; \r\n        let secondControlValue = abstractControl.get(secondControlName).value;\r\n        if (firstControlValue != secondControlValue) {\r\n          abstractControl.get(secondControlName).setErrors({MatchFields: true});\r\n        } else {\r\n          if (abstractControl.get(secondControlName).hasError(\"MatchFields\")) {\r\n            abstractControl.get(secondControlName).updateValueAndValidity();\r\n          }\r\n          return null\r\n        }\r\n      };\r\n    }\r\n  }"],"sourceRoot":""}